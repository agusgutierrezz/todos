@import '_breakpoints';

// Variables
$primary-color: #4CAF50;
$completed-color: #d3d3d3;


// Global Styless
body {
    font-family: 'Plus Jakarta Sans', sans-serif;

    background-color: #f4f4f4;
    margin: 0;
    padding: 20px;
}
.container {
    padding: 20px;
    background-color: #f8f8f8;
  
    // Tablet (Medium) and up
    @media (min-width: $breakpoint-md) {
      padding: 30px;
    }
  
    // Desktop (Large) and up
    @media (min-width: $breakpoint-lg) {
      padding: 40px;
    }
  
    // Large desktops (Extra Large)
    @media (min-width: $breakpoint-xl) {
      padding: 50px;
    }
  }
// Container Styles

// Input Styles
#task-input {
    width: calc(100% - 40px);
    padding: 10px;
    border: 1px solid #ccc;
    border-radius: 4px;
    margin-right: 10px;

    &:focus {
        outline: none;
        border-color: $primary-color;
    }
}

// Button Styles
button {
    padding: 10px 15px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    background: $primary-color;
    color: white;

    &:hover {
        background: darken($primary-color, 10%);
    }

    &.delete-btn {
        background: red;

        &:hover {
            background: darken(red, 10%);
        }
    }
}

// Task List Styles
#task-list {
    list-style-type: none;
    padding: 0;

    .task-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 10px;
        margin: 5px 0;
        border: 1px solid #ddd;
        border-radius: 4px;

        &.completed {
            background-color: $completed-color;
            text-decoration: line-through;
        }

        .task-content {
            flex-grow: 1;
            margin-right: 10px;
        }

    }
}

#filter-tasks {
    margin: 10px 0;
    padding: 5px;
    border-radius: 4px;
    border: 1px solid #ccc;
}

.error-message {
    color: red;
    display: none; /* Hide by default */
}
.error-message.visible {
    display: inline; /* Show when there's an error */
}
.task-container {
    display: flex;
    justify-content: space-between;
    flex-wrap: wrap;
}

.column {
    width: 45%;
}

.task-list {
    list-style: none;
    padding: 0;
}

.no-tasks-message {
    display: none;
    font-style: italic;
    color: #888;
}
// Define keyframes for the popurri animation
@keyframes popurri {
    0% {
      transform: scale(1) rotate(0deg);   // Normal size, no rotation
      opacity: 1;
    }
    20% {
      transform: scale(1.2) rotate(10deg); // Slight scale and rotate
      opacity: 0.9;
    }
    40% {
      transform: scale(0.9) rotate(-15deg); // Shrink and rotate the other way
      opacity: 1;
    }
    60% {
      transform: scale(1.3) rotate(5deg);  // Big bounce up
      opacity: 0.8;
    }
    80% {
      transform: scale(1.1) rotate(-10deg); // Shrink down again
      opacity: 0.9;
    }
    100% {
      transform: scale(1) rotate(0deg);    // Back to normal
      opacity: 1;
    }
  }
  
  // Confetti keyframe for fun little confetti particles
  @keyframes confetti {
    0% {
      opacity: 1;
      transform: translateY(0) rotate(0deg); // Start from top
    }
    100% {
      opacity: 0;
      transform: translateY(100px) rotate(360deg); // Fall down and rotate
    }
  }
  
  // Styling for the completed tasks with popurri effect
  .task-item{
padding: 10px;
border-radius: 10px;
border: 1px solid #ccc;
  
  
  &.completed {
    animation: popurri 0.7s ease-in-out; // Apply the animation when a task is marked as completed
    background-color: #d1f9d6; // Fun background color to indicate completion
    border-color: #2ecc71; // Add a border to match
    position: relative; // Ensure confetti can be positioned inside
    .complete-btn{
        display: none;
    }
  }
}
  // Optional: Make the task buttons a bit fancier on hover
  .complete-btn:hover,
  .delete-btn:hover {
    transform: scale(1.2) rotate(10deg); // Make the buttons grow and rotate a bit on hover
    transition: transform 0.2s;
  }
  
  // Confetti pieces when task is completed
  .task-item.completed::before,
  .task-item.completed::after {
    content: '';
    position: absolute;
    width: 6px;
    height: 6px;
    background-color: #EB3F43; // Fun confetti color
    top: -10px;
    left: 50%;
    border-radius: 50%;
    transform: translateX(-50%);
    animation: confetti 0.5s ease-out forwards;
  }
  
  .task-item.completed::after {
    left: 60%; // Make sure they don't overlap
    animation-delay: 0.1s; // Add a small delay for effect
  }
  .column{
width: 100%;
    @media (min-width: $breakpoint-lg) {
            width: 50%;
        }
        
  }